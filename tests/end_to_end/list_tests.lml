let proper_list = [1, 2, 3, ("hello " + "world")];
let l = proper_list;
let _ = append l 1;
let _ = append l 2;
let _ = pop l;
let _ = append l 3;
let _ = println l;
let _ = println "should be true" (proper_list == l);
if (!(proper_list == l)) {
    undef_var;
};

let l = list "hello";
if ((l * 2) != (["h", "e", "l", "l", "o", "h", "e", "l", "l", "o"])) {
    panic "oh no";
};

if (len (3 * l) != 15) {
    panic "wrong!";
};

let s = "what";
if (get s 2 != "a") {
    panic "wrong";
};

set l 3 "m";

if (join l != "helmo") {
    panic "well thats wrong";
};

if (l + (["!", "?"]) != list "helmo!?") {
    panic "wrong";
};

let l1 = [1, 2, 3];
let l2 = copy l1;
append l1 4;
if (l1 == l2) {
    panic "copy did not decouple lists";
};

let l1 = [[1], [2], [[3]]];
let l2 = deep_copy l1;
append (get (get l1 2) 0) 4;
if (l1 == l2) {
    panic "deep copy did not recursively decouple lists";
};

return proper_list;
